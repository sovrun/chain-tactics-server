{
  "name": "contracts",
  "version": "0.0.0",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "mud build",
    "clean": "forge clean && rimraf src/codegen",
    "deploy": "mud deploy",
    "deploy:garnet": "mud deploy --profile=garnet",
    "deploy:local": "mud deploy",
    "deploy:redstone": "mud deploy --profile=redstone",
    "deploy:sovrun": "mud deploy --profile=sovrun",
    "deploy:hypeSovrun": "mud deploy --profile=hypesovrun",
    "deploy:sovrunl3": "mud deploy --profile=sovrunl3",
    "deploy:sepolia": "mud deploy --profile=sepolia",
    "deploy:amoy": "mud deploy --profile=amoy",
    "deploy:hypearbl2": "mud deploy --profile=hypearbl2",
    "deploy:update": "source ./.env && mud deploy --profile=sovrun --worldAddress $WORLD_ADDRESS",
    "contract:verifier": "source ./.env && pnpm mud verify --rpc $RPC_URL --worldAddress $WORLD_ADDRESS --verifier blockscout --verifierUrl $CONTRACT_VERIFIER",
    "dev": "mud dev-contracts",
    "lint": "pnpm run prettier && pnpm run solhint",
    "prettier": "prettier --write 'src/**/*.sol'",
    "solhint": "solhint --config ./.solhint.json 'src/**/*.sol' --fix",
    "test": "tsc --noEmit && mud test",
    "match:joinQueue": "source ./.env && pnpm forge script script/JoinQueue.s.sol:JoinQueueScript --broadcast --rpc-url $RPC_URL --chain-id $CHAIN_ID --sig \"run(address)\" $WORLD_ADDRESS -vvv",
    "match:leave": "source ./.env && pnpm forge script script/Leave.s.sol:LeaveScript --broadcast --rpc-url $RPC_URL --chain-id $CHAIN_ID --sig \"run(address)\" $WORLD_ADDRESS -vvv",
    "match:setReadyPlayer": "source ./.env && pnpm forge script script/SetReadyPlayer.s.sol:SetReadyPlayerScript --broadcast --rpc-url $RPC_URL --chain-id $CHAIN_ID --sig \"run(address)\" $WORLD_ADDRESS -vvv",
    "dev:unity": "pnpm run csgen && npx mkdirp ../../unity/Assets/Resources && cp worlds.json ../../unity/Assets/Resources/worlds.json",
    "deploy:unity": "pnpm run dev && pnpm run deploy:unity",
    "csgen": "wait-on ./out/IWorld.sol/IWorld.abi.json && dotnet tool restore && pnpm run csBindings && pnpm run csTables",
    "csBindings": "ts-node unity/csBindings.ts ../../unity/Assets/Scripts",
    "csTables": "rimraf ../../unity/Assets/Scripts/codegen && tsx unity/csDataStore.ts ../../unity/Assets/Scripts/codegen"
  },
  "dependencies": {
    "@latticexyz/cli": "2.0.12",
    "@latticexyz/gas-report": "^2.0.12",
    "@latticexyz/schema-type": "2.0.0-next.11",
    "@latticexyz/store": "2.0.12",
    "@latticexyz/world": "2.0.12",
    "@latticexyz/world-modules": "2.0.12",
    "mkdirp": "^3.0.1"
  },
  "devDependencies": {
    "@types/ejs": "^3.1.3",
    "@types/node": "^18.15.11",
    "ds-test": "https://github.com/dapphub/ds-test.git#e282159d5170298eb2455a6c05280ab5a73a4ef0",
    "ejs": "^3.1.9",
    "forge-std": "https://github.com/foundry-rs/forge-std.git#74cfb77e308dd188d2f58864aaf44963ae6b88b1",
    "prettier": "3.2.5",
    "prettier-plugin-solidity": "1.3.1",
    "solhint": "^3.3.7",
    "solhint-config-mud": "2.0.12",
    "solhint-plugin-mud": "2.0.12",
    "ts-node": "^10.9.2",
    "tsx": "^3.13.0",
    "typescript": "5.4.2",
    "wait-on": "^7.0.1"
  }
}
